// <auto-generated />
using System;
using Coboss.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Coboss.Persistance.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231025195902_v2")]
    partial class v2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Coboss.Persistance.Entities.Attachment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int?>("BusinnessTaskID")
                        .HasColumnType("integer");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("BusinnessTaskID");

                    b.ToTable("Attachments", "coboss");
                });

            modelBuilder.Entity("Coboss.Persistance.Entities.BusinnessTask", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2023, 10, 25, 19, 59, 1, 970, DateTimeKind.Utc).AddTicks(3785));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Term")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2023, 10, 25, 19, 59, 1, 970, DateTimeKind.Utc).AddTicks(4016));

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("BusinnessTasks", "coboss");
                });

            modelBuilder.Entity("Coboss.Persistance.Entities.BusinnessTaskRealisation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int?>("BusinnessTaskID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2023, 10, 25, 19, 59, 1, 970, DateTimeKind.Utc).AddTicks(5623));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<TimeSpan>("TimeSpan")
                        .HasColumnType("interval");

                    b.HasKey("ID");

                    b.HasIndex("BusinnessTaskID");

                    b.ToTable("BusinnessTaskRealisations", "coboss");
                });

            modelBuilder.Entity("Coboss.Persistance.Entities.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("ID");

                    b.ToTable("Employers", "coboss");
                });

            modelBuilder.Entity("Coboss.Persistance.Entities.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("ID");

                    b.ToTable("Projects", "coboss");
                });

            modelBuilder.Entity("Coboss.Persistance.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("integer");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("bytea");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID")
                        .IsUnique();

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users", "coboss");
                });

            modelBuilder.Entity("Coboss.Persistance.Entities.Attachment", b =>
                {
                    b.HasOne("Coboss.Persistance.Entities.BusinnessTask", null)
                        .WithMany("Attachments")
                        .HasForeignKey("BusinnessTaskID");
                });

            modelBuilder.Entity("Coboss.Persistance.Entities.BusinnessTask", b =>
                {
                    b.HasOne("Coboss.Persistance.Entities.Project", null)
                        .WithMany("BusinnessTasks")
                        .HasForeignKey("ProjectID");
                });

            modelBuilder.Entity("Coboss.Persistance.Entities.BusinnessTaskRealisation", b =>
                {
                    b.HasOne("Coboss.Persistance.Entities.BusinnessTask", null)
                        .WithMany("BusinnessTaskRealisations")
                        .HasForeignKey("BusinnessTaskID");
                });

            modelBuilder.Entity("Coboss.Persistance.Entities.User", b =>
                {
                    b.HasOne("Coboss.Persistance.Entities.Employee", "Employee")
                        .WithOne("User")
                        .HasForeignKey("Coboss.Persistance.Entities.User", "EmployeeID");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Coboss.Persistance.Entities.BusinnessTask", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("BusinnessTaskRealisations");
                });

            modelBuilder.Entity("Coboss.Persistance.Entities.Employee", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("Coboss.Persistance.Entities.Project", b =>
                {
                    b.Navigation("BusinnessTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
